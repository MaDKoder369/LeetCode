public class Solution
{
   String[][] keyboard = new String[][]
   {
      {"q","w","e","r","t","y","u","i","o","p"},
      {"a","s","d","f","g","h","j","k","l"},
      {"z","x","c","v","b","n","m"}
   };

   public String[] findWords(String[] words)
   {
      String[] answer = new String[20];
      int in = 0;

      for (String word: words) 
      {
          
         boolean nextRow = true;
         boolean firstrow = true;
         int wordlen = 0;
         int keybRow = 0;
         int length = word.length();
         String wword = word.toLowerCase();
         String[] row = getKeyboardRow(keybRow);

         for ( int i = 0; i < length; )
         {
            String sym = Character.toString(wword.charAt(i));


            if ( compare(row, sym) )
            {
                i++;
               wordlen++;
            }
            else
            {
               if (keybRow >= 3)
               {
                  break;
               }
               else
               {
                  i = 0;
                  row = getKeyboardRow(++keybRow);
                  wordlen = 0;
               }
            }
         }
         if (wordlen == length)
         {
            answer[in] = word;
            in++;
         }
      }

   List<String> nonBlank = new ArrayList<String>();
   for(String s: answer) 
   {
      if (s != null) 
      {
         nonBlank.add(s);
      }
   }

   String[] strArr = (String[]) nonBlank.toArray( new String[nonBlank.size()] ); 

   return strArr;
   }

   public String[] getKeyboardRow(int keybRow)
   {
       if(keybRow== 3)
       {
           keybRow = 0;
       }
       
      return keyboard[keybRow];
   }

   public boolean compare ( String[] row, String sym )
   {
      for( String ch: row )
      {
         if( comp(ch,sym) == 1 )
         {
            return true;
         }
      }
      return false;
   }

   public int comp (String c1, String ch2)
   {
      if (c1.equals(ch2) )
      {
         return 1;
      }
      else
      {
         return -1;
      }
   }

}
